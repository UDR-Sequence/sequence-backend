# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: CI CD process

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      
    # 테스트용 MariaDB 컨테이너 추가
    services:
      mariadb:
        image: mariadb:latest
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpass
        ports:
          - 3306:3306

    env:
      DATABASE_URL: jdbc:mariadb://localhost:3306/testdb
      DATABASE_USERNAME: testuser
      DATABASE_PASSWORD: testpass
      DATABASE_DRIVER: org.mariadb.jdbc.Driver
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      MAX_FILE_SIZE: ${{ secrets.MAX_FILE_SIZE }}
      MAX_REQUEST_SIZE : ${{ secrets.MAX_REQUEST_SIZE }}

    
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4 # v4.0.0
      with:
        gradle-version: '8.10.2'

    - name: Build with Gradle Wrapper
      run: ./gradlew build
      working-directory: sequence_member

    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
    #   with:
    #     gradle-version: '8.9'
    #
    # - name: Build with Gradle 8.9
    #   run: gradle build

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
      with:
        build-root-directory: sequence_member


  docker-build-and-push:
    needs: [build, dependency-submission] #위에 작업 완료후 진행
    runs-on: ubuntu-latest
    steps:
      # 도커 로그인
      - name: Docker Login
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      # Docker 이미지 빌드
      - name: Build Docker image
        run: |
          docker build -t ${{secrets.DOCKER_USERNAME}}/sequence:latest .
        working-directory: sequence_member
      # Docker 이미지 푸시
      - name: Push Docker image
        run: |
          docker push ${{secrets.DOCKER_USERNAME}}/sequence:lates
        
